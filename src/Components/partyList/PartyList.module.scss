@import '../../styles/mixins';
@import '../../styles/globals';

// PartyList.module.scss
.partyListContainer {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); // Creates a responsive grid layout with a minimum column width of 250px
  gap: 20px; // Adds space between grid items
}

.partyItem {
  background: #fff; // Sets the background color to white
  border: 1px solid #ddd; // Adds a light grey border
  border-radius: 4px; // Rounds the corners of the border
  overflow: hidden; // Prevents content from spilling outside the border-radius
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); // Adds a subtle shadow for depth
  transition: box-shadow 0.3s ease; // Animates the shadow on hover
  text-align: center; // Centers the text horizontally within the item
  width: 100%; // Ensures the item fills the width of its grid column
  max-width: 100%; // Ensures the item does not exceed the width of its grid column
  display: flex; // Enables flexbox layout mode
  flex-direction: column; // Stacks children elements vertically
  align-items: center; // Centers children elements horizontally

  &:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); // Darkens the shadow on hover for a raised effect
  }

  &.selected {
    border-color: #007bff; // Highlights the border of the selected item with a blue color
  }
}

.partyImage {
  width: 100%; // Ensures the image takes the full width of its container
  height: 350px; // Sets a fixed height for all images
  object-fit: cover; // Ensures the image covers the area without stretching
  margin-bottom: 10px; // Adds some space between the image and the button below
}

.selectedButton {
  background-color: #ff0000; // Sets the background color of the selected button to red
  width: 100%; // Ensures the button fills the width of its container
  padding: 10px 0; // Adds padding to the top and bottom of the button
  margin-top: auto; // Pushes the button to the bottom of the container
}
